name: python-workflow
run-name: ${{ github.actor }} is running the python workflow

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    name: Create python virtualenv
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Setup python 3.11
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'
      - name: Install dependencies
        run: |
            python -m pip install poetry
            poetry config virtualenvs.in-project true
            poetry install --no-root
      - name: Cache virtualenv
        uses: actions/cache@v3
        with:
          path: .venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
  lint:
    name: Run linting
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: .venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
      - run: |
          python -m pip install poetry
          poetry run ruff check . --fix
  test:
    name: Run pytest
    needs: build
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/cache@v3
        with:
          path: .venv
          key: ${{ runner.os }}-venv-${{ hashFiles('**/poetry.lock') }}
      - run: |
          python -m pip install poetry
          poetry run pytest
